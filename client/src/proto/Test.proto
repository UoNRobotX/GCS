//This file defines messages for testing (the real ones will be different).

syntax = "proto3";

message Parameter {
    enum Type {
        DOUBLE = 0;
        VEC3   = 1;
        MAT3   = 2;
    }
    string section    = 1;
    string subSection = 2;
    string title      = 3;
    Type type         = 4;
    string value      = 5;
}

message Setting {
    string section = 1;
    string title   = 2;
    string value   = 3;
}

message Mission {
    message Waypoint {
        enum Type {
            GO_TO_POINT = 0;
        }
        string title     = 1;
        Type type        = 2;
        double latitude  = 3;
        double longitude = 4;
    }
    string title                = 1;
    double originLatitude       = 2;
    double originLongitude      = 3;
    repeated Waypoint waypoints = 4;
}

//sent regularly by the WAM-V to the server, which sends it to clients
message Status {
    enum Mode {
        STOPPED = 0;
        AUTO    = 1;
        PAUSED  = 2;
        KILLED  = 3;
    }
    double latitude  = 1;
    double longitude = 2;
    double heading   = 3; //0-360
    double speed     = 4; //kmph
    double battery   = 5; //0-100
    bool armed       = 6;
    Mode mode        = 7;
    double signal    = 8; //0-100
}

//sent from the client to the server, which sends it to the WAM-V
message Command {
    enum Type {
        ARM    = 0;
        DISARM = 1;
        START  = 2;
        STOP   = 3;
        RESUME = 4;
        KILL   = 5;
        UNKILL = 6;
    }
    Type type = 1;
}

//sent from the client to the server, and requests parameters
message GetParameters {}

//sent from the server to the client, in response to a request for parameters
message GetParametersResponse {
    repeated Parameter parameters = 1;
}

//sent from the client to the server, and requests settings
message GetSettings {}

//sent from the server to the client, in response to a request for settings
message GetSettingsResponse {
    repeated Setting settings = 1;
}

//sent from the client to the server, and requests the last uploaded mission
message GetMission {}

//sent from the server to the client, in response to a request for the last uploaded mission
message GetMissionResponse {
    Mission mission = 1;
}

//sent from the client to the server, and requests the server's saved mission list
message GetMissions {}

//sent from the server to the client, in response to a request for the server's saved mission list
message GetMissionsResponse {
    repeated Mission missions = 1;
}

//sent from the client to the server, specifying parameters to be set
message SetParameters {
    repeated Parameter parameters = 1;
}

//sent from the client to the server, specifying settings to be set
message SetSettings {
    repeated Setting settings = 1;
}

//sent from the client to the server, specifying a mission to upload
message SetMission {
    Mission mission = 1;
}

//sent from the client to the server, specifying a mission list to save
message SetMissions {
    repeated Mission missions = 1;
}

//sent from the server to the client, in response to a Command or Set* message
message Success {}

//sent from the server to the client, in response to a Command or Get* or Set* message
message Failure {
    string msg = 1;
}

//sent from the server to the client, intended to notify the user
//example messages: Mission completed. Battery is at 0%. Parameters changed by another client.
message Attention {
    string msg = 1;
}
